#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

ExecuteProcess('Export Dimensions to SPSS','pDimension','product','pIncludeParent','Y');
ExecuteProcess('Export Dimensions to SPSS','pDimension','organization','pIncludeParent','Y');
ExecuteProcess('Export Dimensions to SPSS','pDimension','Channel','pIncludeParent','N');
ExecuteProcess('Export Dimensions to SPSS','pDimension','Year','pIncludeParent','N');
ExecuteProcess('Export Dimensions to SPSS','pDimension','Month','pIncludeParent','N');
ExecuteProcess('Export Dimensions to SPSS','pDimension','ExternalFactors','pIncludeParent','N');


v_FileName = CellGetS( 'Calendar', 'SPSS Directory','String')|'UnitsSoldSPSS.csv';
v_Counter =1;
vUnits=0;
vCurrentYear = CellGetS('Calendar', 'Current Year','String');
vCurrentYearIndex=ATTRN('Year',vCurrentYear,'Index');
vForecastMonth = CellGetS('Calendar', 'Fcst Month','String');
vForecastMonthIndex = ATTRN('Month',vForecastMonth,'Number');





#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

# Get the Member Names
vOrganizationCode = DimensionElementPrincipalName( 'Organization', vOrganization);
vProductCode = DimensionElementPrincipalName( 'Product', vProduct);
vProductGroupCode = DimensionElementPrincipalName( 'Product', ELPAR('Product', vproduct, 1));
vChannelCode = DimensionElementPrincipalName( 'Channel', vChannel);
vYearCode = DimensionElementPrincipalName( 'Year', vYear);
vMonthCode = DimensionElementPrincipalName( 'Month', vMonth);

# Get the Member Aliases
vOrganizationAlias=ATTRS('Organization',vOrganization,'Caption_Default');
vProductAlias=ATTRS('Product',vProduct,'Caption_Default');
vProductGroupAlias = ATTRS('Product',vProductGroupCode,'Caption_Default');
vChannelAlias=ATTRS('Channel',vChannel,'Caption_Default');
vYearAlias=ATTRS('Year',vYear,'Caption_Default');
vMonthAlias=ATTRS('Month',vMonth,'Caption_Default');

IF (v_Counter = 1);
  ASCIIOUTPUT(v_FileName,'Cube','OrganizationCode','ChannelCode','ProductCode','MonthCode','YearCode','ActFor','Units');
ENDIF;

vYearIndex = ATTRN('Year',vYear,'Index');
vMonthIndex = ATTRN('Month',vMonth,'Number');
vUnits = 0;
vActfor='';

IF (vYearIndex < vCurrentYearIndex);
  vUnits = Value;
  vActFor = 'A';
ENDIF;

IF (vYearIndex = vCurrentYearIndex);
   IF (vMonthIndex < vForecastMonthIndex);
    vUnits = Value;
    vActFor = 'A';
   ELSE;
     vUnits = 0;
    vActFor = 'F';  
   ENDIF;
ENDIF;

IF (vYearIndex > vCurrentYearIndex);
  vUnits = 0;
  vActFor = 'F';
ENDIF;

IF (vActFor @='A');
  ASCIIOUTPUT(v_FileName,'Smartco:Revenue',vOrganizationCode,vChannelCode,vProductCode,vMonthCode,vYearCode,vActFor,NumberToString(vUnits));
ENDIF;
v_Counter = v_Counter + 1;
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion